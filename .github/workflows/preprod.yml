name: Deploy Preprod

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment"
        required: true
        default: "preprod_hq"
        type: choice
        options:
          - preprod_hq

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - uses: actions/checkout@v4

      # --- Build API ---
      - name: Build API
        run: docker build -f Beauty4u.WebApi/Dockerfile -t beauty4u_api:latest .

      # --- Build Jobs ---
      - name: Build Jobs
        run: docker build -f Beauty4u.Jobs/Dockerfile -t beauty4u_jobs:latest .

      # --- Build Angular Web ---
      - name: Inject API Base URL
        run: |
          sed -i "s|API_BASE_URL_PLACEHOLDER|${{ vars.APIBASEURL }}|g" Beauty4u.Web/src/environments/environment.prod.ts
      - name: Build Angular Web
        run: docker build -f Beauty4u.Web/Dockerfile -t beauty4u_web:latest Beauty4u.Web

      # --- Save Docker Images ---
      - name: Save Docker Images
        run: |      
          # Save each tagged image
          docker save beauty4u_api:latest -o beauty4u_api.tar
          docker save beauty4u_jobs:latest -o beauty4u_jobs.tar
          docker save beauty4u_web:latest -o beauty4u_web.tar

      # --- Copy & Load Docker images in one go ---
      - name: Copy & Load Docker images to Windows VM
        run: |
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" scp -o StrictHostKeyChecking=no docker-compose.yml ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }}:"${{ vars.DEPLOY_FOLDER }}"
      
          for tar in beauty4u_jobs.tar beauty4u_web.tar beauty4u_api.tar; do
            echo "ðŸ“¦ Loading $tar ..."
            sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" \
              ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }} \
              "docker load" < $tar
          done
      
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" \

      - name: Run Docker container for beauty4u_web
        run: |      
          # Stop & remove beauty4u_web container instead of loading images
          echo "Stopping and removing beauty4u_web ..."
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no \
            ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }} \
            "powershell -Command \"if (docker ps -a -q -f name=beauty4u_web) { docker stop beauty4u_web; docker rm -f beauty4u_web }\""

          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no \
            ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }} \
            "docker run -d \
              --name beauty4u_web \
              --memory=1g \
              --memory-reservation=1g \
              -p 8101:80 \
              beauty4u_web:latest"

      - name: Run Docker container for beauty4u_hq
        run: |      
          # Stop & remove beauty4u_web container instead of loading images
          echo "Stopping and removing beauty4u_web ..."
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no \
            ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }} \
            "powershell -Command \"if (docker ps -a -q -f name=beauty4u_hq) { docker stop beauty4u_hq; docker rm -f beauty4u_hq }\""

          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" \
            ssh -o StrictHostKeyChecking=no \
            ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }} \
            "docker run -d \
              --name beauty4u_hq \
              --memory=1g \
              --memory-reservation=1g \
              -e DOTNET_ENVIRONMENT=Production \
              -e ASPNETCORE_URLS=http://+:5100 \
              -e \"ConnectionStrings__B4UConnection=${{ secrets.B4UCONNECTION }}\" \
              -e DbConnectionAccess__User='${{ secrets.DBUSER }}' \
              -e \"DbConnectionAccess__Password=${{ secrets.DBPASSWORD }}\" \
              -e Jwt__Audience='${{ secrets.JWT_AUDIENCE }}' \
              -e Jwt__Issuer='${{ secrets.JWT_ISSUER }}' \
              -e Jwt__Key='${{ secrets.JWT_KEY }}' \
              -e Jwt__Secret='${{ secrets.JWT_SECRET }}' \
              -e Jwt__AccessTokenExpiryMinutes=${{ vars.JWT_ACCESSTOKENEXPIRYMINUTES }} \
              -e Jwt__RefreshTokenExpiryDays=${{ vars.JWT_REFRESHTOKENEXPIRYDAYS }} \
              -e SchedulerApi='http://***:6100' \
              -e HqSettings__HqApi='http://***:5100' \
              -e HqSettings__IsHq='${{ vars.HQSETTINGS_ISHQ }}' \
              -e Cors__AllowedOrigins='${{ vars.CORS_ALLOWEDORIGINS }}' \
              -p 5100:5100 \
              beauty4u_api:latest"
