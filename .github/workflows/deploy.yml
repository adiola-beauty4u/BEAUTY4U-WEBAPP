name: Deploy Beauty4U

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment"
        required: true
        default: "preprod_hq"
        type: choice
        options:
          - preprod_hq

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - uses: actions/checkout@v4

      # --- Deploy on Windows VM ---
      - name: Build & Deploy on Windows VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          port: 22
          script: |
            cd C:\path\to\deploy\folder

            echo "ðŸ“¦ Cloning repo..."
            git clone https://github.com/<your-repo>.git repo || echo "repo exists"
            cd repo

            echo "ðŸ“Œ Building Docker images..."
            docker build -f Beauty4u.WebApi/Dockerfile -t beauty4u_api:latest .
            docker build -f Beauty4u.Jobs/Dockerfile -t beauty4u_jobs:latest .
            docker build -f Beauty4u.Web/Dockerfile -t beauty4u_web:latest Beauty4u.Web

            echo "ðŸš€ Running containers..."
            # API container
            docker stop beauty4u_hq 2>$null || true
            docker rm beauty4u_hq 2>$null || true
            docker run -d `
              --name beauty4u_hq `
              -p 5100:5100 `
              -e DOTNET_ENVIRONMENT=Production `
              -e ASPNETCORE_URLS=http://+:5100 `
              -e B4UCONNECTION=${{ secrets.B4UCONNECTION }} `
              -e DBUSER=${{ secrets.DBUSER }} `
              -e DBPASSWORD=${{ secrets.DBPASSWORD }} `
              -e JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }} `
              -e JWT_ISSUER=${{ secrets.JWT_ISSUER }} `
              -e JWT_KEY=${{ secrets.JWT_KEY }} `
              -e JWT_SECRET=${{ secrets.JWT_SECRET }} `
              -e JWT_ACCESSTOKENEXPIRYMINUTES=60 `
              -e JWT_REFRESHTOKENEXPIRYDAYS=7 `
              -e SCHEDULERAPI=http://***:6100 `
              -e HQAPI=http://***:5100 `
              -e ISHQ=${{ vars.HQSETTINGS_ISHQ }} `
              -e CORS_ALLOWED_ORIGINS=${{ vars.CORS_ALLOWED_ORIGINS }} `
              beauty4u_api:latest

            # Jobs container
            docker stop beauty4u_jobs 2>$null || true
            docker rm beauty4u_jobs 2>$null || true
            docker run -d `
              --name beauty4u_jobs `
              -p 6100:6100 `
              -e DOTNET_ENVIRONMENT=Production `
              -e ASPNETCORE_URLS=http://+:6100 `
              -e ConnectionStrings__B4UConnection=${{ secrets.B4UCONNECTION }} `
              -e DbConnectionAccess__User=${{ secrets.DBUSER }} `
              -e DbConnectionAccess__Password=${{ secrets.DBPASSWORD }} `
              -e Jwt__Key=${{ secrets.JWT_KEY }} `
              -e Jwt__Issuer=${{ secrets.JWT_ISSUER }} `
              -e Jwt__Audience=${{ secrets.JWT_AUDIENCE }} `
              -e Jwt__Secret=${{ secrets.JWT_SECRET }} `
              -e Jwt__AccessTokenExpiryMinutes=60 `
              -e Jwt__RefreshTokenExpiryDays=7 `
              -e SchedulerApi=http://***:6100 `
              beauty4u_jobs:latest

            # Web container
            docker stop beauty4u_web 2>$null || true
            docker rm beauty4u_web 2>$null || true
            docker run -d `
              --name beauty4u_web `
              -p 8101:80 `
              beauty4u_web:latest

            echo "âœ… Deployment finished!"
