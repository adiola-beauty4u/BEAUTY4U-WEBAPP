name: Deploy Beauty4U

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose environment"
        required: true
        default: "preprod_hq"
        type: choice
        options:
          - preprod_hq

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:
      - uses: actions/checkout@v4

      # --- Build API ---
      - name: Build API
        run: docker build -f Beauty4u.WebApi/Dockerfile -t beauty4u_api:latest .

      # --- Build Jobs ---
      - name: Build Jobs
        run: docker build -f Beauty4u.Jobs/Dockerfile -t beauty4u_jobs:latest .

      # --- Angular API_BASE_URL ---
      - name: Inject API Base URL
        run: |
          sed -i "s|API_BASE_URL_PLACEHOLDER|${{ vars.APIBASEURL }}|g" Beauty4u.Web/src/environments/environment.prod.ts
      # --- Build Angular Web ---
      - name: Build Angular Web
        run: docker build -f Beauty4u.Web/Dockerfile -t beauty4u_web:latest Beauty4u.Web


      # --- Save Images ---
      - name: Save Docker Images
        run: |
          docker save beauty4u_api:latest -o beauty4u_api.tar
          docker save beauty4u_jobs:latest -o beauty4u_jobs.tar
          docker save beauty4u_web:latest -o beauty4u_web.tar
          
      - name: Verify Docker images saved as tar files
        run: readlink -f *.tar
        
      - name: Check files in workspace
        run: readlink -f *.yml

      - name: Copy files with scp
        run: |
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" \
          scp -o StrictHostKeyChecking=no \
          beauty4u_api.tar beauty4u_jobs.tar beauty4u_web.tar docker-compose.yml \
          ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_IP }}:"${{ vars.DEPLOY_FOLDER }}"
            
      # --- Deploy ---
      - name: Deploy on Azure VM
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USER }}
          password: ${{ secrets.AZURE_VM_PASSWORD }}
          port: 22
          script: |
            cd ${{ vars.DEPLOY_FOLDER }}
            docker load -i beauty4u_api.tar
            docker load -i beauty4u_jobs.tar
            docker load -i beauty4u_web.tar

            echo B4UCONNECTION=${{ secrets.B4UCONNECTION }} >> .env
            echo API_PORT=5100 > .env
            echo API_CONTAINER_NAME=beauty4u_hq >> .env
            echo JOBS_PORT=6100 >> .env
            echo JOBS_CONTAINER_NAME=beauty4u_jobs >> .env
            echo WEB_PORT=8101 >> .env
            echo WEB_CONTAINER_NAME=beauty4u_web >> .env
            echo DBUSER=${{ secrets.DBUSER }} >> .env
            echo DBPASSWORD=${{ secrets.DBPASSWORD }} >> .env
            echo JWT_AUDIENCE=${{ secrets.JWT_AUDIENCE }} >> .env
            echo JWT_ISSUER=${{ secrets.JWT_ISSUER }} >> .env
            echo JWT_KEY=${{ secrets.JWT_KEY }} >> .env
            echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
            echo JWT_ACCESSTOKENEXPIRYMINUTES=60 >> .env
            echo JWT_REFRESHTOKENEXPIRYDAYS=7 >> .env
            echo SCHEDULERAPI=http://***:6100 >> .env
            echo HQAPI=http://***:5100 >> .env
            echo ISHQ=${{ vars.HQSETTINGS_ISHQ }} >> .env
            echo CORS_ALLOWED_ORIGINS=${{ vars.CORS_ALLOWED_ORIGINS }} >> .env

            docker compose up -d

